name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
    - uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the image
      run: |
        cd Application
        docker build -t surusuraj200021/suru:node .
    - name: push to dockerhub
      run: docker push surusuraj200021/suru:node
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Terraform Init
      run: terraform init
      working-directory: STEP-1
    - name: Terraform Plan
      run: terraform plan
      working-directory: STEP-1
    - name: Terraform Apply
      run: terraform apply -input=false -auto-approve 
      working-directory: STEP-1
    - name: Terraform Output(private)
      run: terraform output public_ip
      working-directory: STEP-1
    - name: Terraform Output(public)-private
      run: terraform output private_ip
      working-directory: STEP-1
    - name: Instance ID
      run: terraform output instance_id
      working-directory: STEP-1
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: STEP-1
      if: failure() || success()