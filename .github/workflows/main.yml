name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: my-env
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3

    - uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build the image
      run: |
        cd Application
        docker build -t surusuraj200021/suru:node .

    - name: Push to Docker Hub
      run: docker push surusuraj200021/suru:node

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init
      working-directory: STEP-1

    - name: Terraform Plan
      run: terraform plan
      working-directory: STEP-1

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: STEP-1

    - name: Terraform Output public-ip
      run: |
        terraform output public_ip
        terraform output -raw public_ip
        terraform output public_ip | awk '{print $1}' > ~/1.txt
        terraform output public_ip | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' > ~/public
        cat ~/public
      working-directory: STEP-1
    - name: Terraform Output private-ip
      run: |
        export private=$(terraform output -raw private_ip)
        terraform output -raw private_ip
      working-directory: STEP-1
    - name: Instance ID
      run: |
        export instance=$(terraform output -raw instance_id)
        terraform output -raw instance_id
      working-directory: STEP-1
    - name: Copy the file
      run: |
        ls STEP-1/
        chmod 700 STEP-1/capstone.pem
        cat STEP-1/capstone.pem > ~/capstone.pem
        cat ~/capstone.pem
        ls ANSIBLE/
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Ansible
      run: pip install ansible
    - name: CAT
      run: cat ANSIBLE/inventory.yml
    - name: Playbook
      run: |
        mv ~/capstone.pem ANSIBLE/
        cd ANSIBLE
        chmod 400 capstone.pem
        ls
        export ANSIBLE_HOST_KEY_CHECKING=False
        ansible-playbook -i inventory.yml playbook.yml
    - name: Terraform Destroy
      run: |
        pwd
        terraform destroy -auto-approve
      if: failure() || success()
      working-directory: STEP-1